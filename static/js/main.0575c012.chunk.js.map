{"version":3,"sources":["img/giraffeLogo.png","components/header/index.jsx","img/steering-wheel.jpeg","img/huddle.jpg","components/chooser/index.jsx","components/groupEntry/index.jsx","components/driver/index.jsx","components/randomizedMember/index.jsx","components/unrandomizedMember/index.jsx","components/randomizeGroup/index.jsx","App.jsx","index.js"],"names":["setDrivers","className","to","src","giraffeLogo","alt","onClick","id","steeringWheel","huddle","Date","getMonth","getDate","currentGiraffes","push","inputValue","setInputValue","handleSubmit","drivers","useState","giraffesAdded","setGiraffesAdded","onSubmit","type","value","onChange","e","target","disabled","props","randomDriver","setRandomDriver","handleRandomDriverRequest","filteredDrivers","filter","driver","Math","floor","random","length","map","index","member","turnTaken","setTurnTaken","randomizedGroup","setRandomizedGroup","sort","App","propsObj","preventDefault","search","split","exact","path","component","Chooser","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0575c012.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/giraffeLogo.4c123223.png\";","import { Link } from \"react-router-dom\";\nimport giraffeLogo from \"../../img/giraffeLogo.png\";\n\nexport default ({ setDrivers }) => {\n  return (\n    <header>\n      <div className=\"container\">\n        <Link to=\"/random-driver\">\n          <img\n            src={giraffeLogo}\n            alt=\"I'm a Giraffe! Logo\"\n            className=\"giraffe-logo\"\n            onClick={() => setDrivers([])}\n          />\n        </Link>\n        <h1>Giraffe Randomizer</h1>\n      </div>\n    </header>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/steering-wheel.c2d16242.jpeg\";","export default __webpack_public_path__ + \"static/media/huddle.f682a926.jpg\";","import { Link } from \"react-router-dom\";\n\nimport steeringWheel from \"../../img/steering-wheel.jpeg\";\nimport huddle from \"../../img/huddle.jpg\";\n\nimport \"./style.css\";\n\nexport default () => {\n  return (\n    <section id=\"chooser-section\">\n      <Link to=\"/random-driver/driver\">\n        <div className=\"driver-section\">\n          <h2 className=\"chooser-heading\">Choose a Random Driver</h2>\n          <img\n            src={steeringWheel}\n            alt=\"Car steering wheel\"\n            className=\"chooser-img\"\n          />\n        </div>\n      </Link>\n      <Link to=\"/random-driver/group\">\n        <div className=\"randomizer-section\">\n          <h2 className=\"chooser-heading\">Randomize a Group</h2>\n          <img src={huddle} alt=\"huddle\" className=\"chooser-img\" />\n        </div>\n      </Link>\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport currentGiraffes from '../../data/currentGiraffes.json';\n\nconst itsAprilFoolsDay = new Date().getMonth() === 4 && new Date().getDate() === 1;\nif (itsAprilFoolsDay) {\n  currentGiraffes.push('Big Chungus 🐰');\n};\n\nimport \"./style.css\";\n\nexport default ({ inputValue, setInputValue, handleSubmit, setDrivers, drivers }) => {\n  const [giraffesAdded, setGiraffesAdded] = useState(false);\n  const handleAddGiraffes = () => {\n    setDrivers([...drivers, ...currentGiraffes]);\n    setGiraffesAdded(true);\n  }\n\n  return (\n    <section className=\"group-entry\">\n      <p>Enter group one at a time or comma separated</p>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <input \n            className=\"form-input-btn\"\n            type=\"submit\" \n            value=\"Add them!\" \n            disabled={!inputValue}\n        />\n      </form>\n      <p>\n        {'Or '}\n        <button onClick={handleAddGiraffes} disabled={giraffesAdded}>Populate with all the Giraffes</button>\n      </p>\n    </section>\n  );\n};\n","import { useState } from \"react\";\nimport GroupEntry from \"../groupEntry\";\n\nimport \"./style.css\";\n\nexport default (props) => {\n  const { drivers } = props;\n  const [randomDriver, setRandomDriver] = useState(null);\n\n  const handleRandomDriverRequest = () => {\n    const filteredDrivers = drivers.filter((driver) => driver !== randomDriver);\n    setRandomDriver(\n      filteredDrivers[Math.floor(Math.random() * filteredDrivers.length)]\n    );\n  };\n\n  return (\n    <div className=\"container driver\">\n      <h2>Find a random driver</h2>\n      <GroupEntry {...props} />\n      {drivers.length > 0 && (\n        <>\n          <h3 className=\"results-header\">Potential Drivers</h3>\n          <ol className=\"results-list\">\n            {drivers.map((driver, index) => (\n              <li key={driver + index}>{driver}</li>\n            ))}\n          </ol>\n          {!randomDriver && (\n            <button className=\"btn-primary\" onClick={handleRandomDriverRequest}>\n              Find the Next Driver!\n            </button>\n          )}\n          {randomDriver && (\n            <>\n              <h2 className=\"driver-header\">The next driver is <span className=\"driver-name\">{randomDriver}</span>!</h2>\n              <button\n                className=\"btn-secondary\"\n                onClick={handleRandomDriverRequest}\n              >\n                Get Another Driver\n              </button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport \"./style.css\";\n\nexport default ({ member }) => {\n  const [turnTaken, setTurnTaken] = useState(false);\n\n  return (\n    <li>\n      <span className={`${turnTaken ? \"turn-taken grey\" : \"\"}`}>{member}</span>\n      <button\n        className=\"check-btn tooltip\"\n        onClick={() => setTurnTaken(!turnTaken)}\n      >\n        {turnTaken ? <span>🔁</span> : <span>✔️</span>}\n        <span className=\"tooltiptext\">\n          {turnTaken\n            ? \"Unmark person\"\n            : \"Mark person as having taken their turn\"}\n        </span>\n      </button>\n    </li>\n  );\n};\n","\nexport default ({ member, drivers, setDrivers, randomizedGroup, setRandomizedGroup }) => {\n  const handleRemoveMember = () => {\n    setDrivers(drivers.filter(driver => driver !== member));\n    setRandomizedGroup(randomizedGroup.filter(driver => driver !== member));\n  }\n\n  return (\n    <li>\n      {member}\n      <button\n        className=\"remove-btn tooltip\"\n        onClick={handleRemoveMember}\n      >\n        <span>x</span>\n        <span className=\"tooltiptext\">Remove this member</span>\n      </button>\n    </li>\n  );\n};\n","import { useState } from \"react\";\nimport GroupEntry from \"../groupEntry\";\nimport GroupMember from \"../randomizedMember\";\nimport UnrandomizedMember from \"../unrandomizedMember\";\n\nimport \"./style.css\";\n\nexport default (props) => {\n  const { drivers, setDrivers } = props;\n  const [randomizedGroup, setRandomizedGroup] = useState([]);\n\n  return (\n    <div className=\"container driver\">\n      <h2>Randomize a Group</h2>\n      <GroupEntry {...props} />\n      {drivers.length > 0 && (\n        <>\n          <h3\n            className={`results-header ${\n              randomizedGroup.length > 0 ? \"grey\" : \"\"\n            }`}\n          >\n            Un-randomized Group\n          </h3>\n          <ol\n            className={`results-list ${\n              randomizedGroup.length > 0 ? \"grey\" : \"\"\n            }`}\n          >\n            {drivers.map(member => (\n              <UnrandomizedMember\n                key={member} \n                member={member} \n                drivers={drivers} \n                setDrivers={setDrivers} \n                randomizedGroup={randomizedGroup}\n                setRandomizedGroup={setRandomizedGroup}\n              />\n            ))}\n          </ol>\n          <button\n            className={\n              randomizedGroup.length > 0 ? \"btn-secondary\" : \"btn-primary\"\n            }\n            onClick={() =>\n              setRandomizedGroup([...drivers].sort(() => Math.random() - 0.5))\n            }\n          >\n            Randomize the Group\n            {randomizedGroup.length > 0 && \" Again\"}\n          </button>\n          {randomizedGroup.length > 0 && (\n            <>\n              <h2 className=\"rando-group-header\">\n                Let's go in this order today!\n              </h2>\n              <ol>\n                {randomizedGroup.map(member => (\n                  <GroupMember key={member} member={member} />\n                ))}\n              </ol>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/header\";\nimport Chooser from \"./components/chooser\";\nimport Driver from \"./components/driver\";\nimport RandomizeGroup from \"./components/randomizeGroup\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [drivers, setDrivers] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.search(\",\") !== -1) {\n        setDrivers([...drivers, ...inputValue.split(\",\")]);\n    } else {\n        setDrivers([...drivers, inputValue]);\n    }\n\n    setInputValue(\"\");\n  };\n\n  const propsObj = {\n    drivers,\n    setDrivers,\n    inputValue,\n    setInputValue,\n    handleSubmit,\n  }\n\n  return (\n    <>\n      <BrowserRouter>\n        <Header setDrivers={setDrivers} />\n        <Switch>\n          <Route exact path=\"/random-driver\" component={Chooser} />\n          <Route exact path=\"/random-driver/driver\" render={() => <Driver {...propsObj} />} />\n          <Route exact path=\"/random-driver/group\" render={() => <RandomizeGroup {...propsObj} />} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}